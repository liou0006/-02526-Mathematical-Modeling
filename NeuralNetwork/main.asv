
clear; clc; clear


T = readtable("C:\Users\liou-\OneDrive - Danmarks Tekniske Universitet\C. Elektroteknologi - Bachelor\6. semester\02526 Mathematical Modeling\-02526-Mathematical-Modeling\NeuralNetwork\Libian_desert_data.csv");

rotatelist = [90,-35,0,0,0,0,0,0]; % change rotation amount here
biaslist = [0,-160,-300,0,0,0,0,0];
activationList = [1,1,0,1,1,0,0,0];

for i=1:1:numel(biaslist)

    bias =  biaslist(i);  % Change Bias here
    rotation = rotatelist(i);

    rotatedImage = rotate_image(T,rotation);
    biasedimage = apply_bias(rotatedImage,bias);  % applying bias
    
    if activationList(i) == 1
        foldedimage = apply_activation(biasedimage,'abs');
    else
        foldedimage = biasedimage;
    end

    T = foldedimage;

    x_values_bias = biasedimage(:,1);
    x_values_folded = foldedimage(:,1);
    % Find indices where a mirrored version exists
    gg = foldedimage.Var1 - biasedimage.Var1;
    m_index = find(gg>0);
    array_fold = foldedimage(m_index,:);


    % overLap = array_fold.Var3 + foldedimage.Var3;

    % if any(overLap.Var3 ~= array_fold.Var3)
    %
    % end

    mirrored_indices = false(size(gg));

    
    figure(1);
    clf;
    hold on
    title('Folded image',i);
    scatter(foldedimage,"Var1","Var2","ColorVariable","Var3","SizeData",1,MarkerFaceAlpha=.1);
    scatter(array_fold,"Var1","Var2","ColorVariable","Var3","SizeData",1,MarkerFaceAlpha=.1);
    xline(0,'Color','red','LineWidth',1.5);
    hold off

   
    figure(2);
    clf;
    hold on
    title('Biased image',i);
    scatter(biasedimage,"Var1","Var2","ColorVariable","Var3","SizeData",1,MarkerFaceAlpha=.1);
    xline(0,'Color','red','LineWidth',1.5);
    hold off
    fig = figure();
    btn = uicontrol('Style', 'pushbutton', 'String', 'Continue', ...
        'Position', [20 20 100 40], ...
        'Callback', 'uiresume(gcbf)');

    uiwait(fig); % Waits for the button to be clicked
    close(fig); % Closes the figure after clicking
end

