function [label, score, hasPnemoniaTest] = modelPredictPart1(TestFolder, Mdl)


hasPnemoniaTest = extract_posneg(TestFolder);
extracted_photos = extract_photos_from_folder(TestFolder);
ALL_ARRAY = extracted_photos2ALL_ARRAY(extracted_photos);

[label, score] = predict(Mdl, ALL_ARRAY');

end

% turns the Testfolder to a (elements in photo x num of photos matrix)
function ALL_ARRAY = test_folder2ALL_ARRAY(TestFolder) 
extracted_photos = extract_photos_from_folder(TestFolder);
flattened = cellfun(@(img) (reshape(img, 1,[] )'), extracted_photos, UniformOutput=false);
ALL_ARRAY = double(cat(2, flattened{:}));
end



% turns the extracted_photos to a (elements in photo x num of photos matrix)
function ALL_ARRAY = extracted_photos2ALL_ARRAY(extracted_photos)
flattened = cellfun(@(img) (reshape(img, 1,[] )'), extracted_photos, UniformOutput=false);
ALL_ARRAY = double(cat(2, flattened{:}));
end


function extracted_posneg = extract_posneg(folderpath)
Testing_photos = dir(fullfile(folderpath,'*.png'));
Testing_photos_name = {Testing_photos.name}';
extracted_posneg = contains(Testing_photos_name, "positive");
end

function extracted_photos = extract_photos_from_folder(folderpath)
Testing_photos = dir(fullfile(folderpath,'*.png'));
Testing_photos_name = {Testing_photos.name}';
test_pre_rawimage = fullfile({Testing_photos.folder}', Testing_photos_name);
extracted_photos = cellfun(@imread, test_pre_rawimage, 'UniformOutput', false);
end